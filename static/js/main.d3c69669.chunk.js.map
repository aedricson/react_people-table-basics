{"version":3,"sources":["components/HomePage/HomePage.tsx","getPeople.ts","components/PeoplePage/PeoplePage.tsx","components/PersonRow/PersonRow.tsx","components/PeopleTable/PeopleTable.tsx","App.tsx","index.tsx"],"names":["HomePage","className","getPeople","a","fetch","responce","json","addParents","actualPeople","map","person","father","find","name","fatherName","mother","motherName","PeoplePage","loadPeople","useEffect","fetchData","data","PersonRow","sex","born","died","PeopleTable","people","slug","App","useState","setPeople","getLinkClass","status","isActive","to","path","element","ReactDOM","render","document","getElementById"],"mappings":"yOAAaA,EAAW,WACtB,OACE,oBAAIC,UAAU,QAAd,wB,+BCESC,EAAS,uCAAG,4BAAAC,EAAA,sEACAC,MAHb,qEAEa,cACjBC,EADiB,yBAGhBA,EAASC,QAHO,2CAAH,qDCIf,SAASC,EAAWC,GACzB,OAAOA,EAAaC,KAAI,SAAAC,GAAM,kCACzBA,GADyB,IAE5BC,OAAQH,EACLI,MAAK,SAAAD,GAAM,OAAIA,EAAOE,OAASH,EAAOI,cACzCC,OAAQP,EACLI,MAAK,SAAAG,GAAM,OAAIA,EAAOF,OAASH,EAAOM,mBAItC,IAAMC,EAA8B,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAW5C,OAVAC,qBAAU,WACR,IAAMC,EAAS,uCAAG,4BAAAjB,EAAA,sEACGD,IADH,OACVmB,EADU,OAGhBH,EAAWX,EAAWc,IAHN,2CAAH,qDAMfD,MACC,IAGD,oBAAInB,UAAU,QAAd,0BCvBSqB,EAA6B,SAAC,GAAgB,IAAdZ,EAAa,EAAbA,OAC3C,OACE,qBAAIT,UAAU,SAAd,UACE,6BAAKS,EAAOG,OACZ,6BAAKH,EAAOa,MACZ,6BAAKb,EAAOc,OACZ,6BAAKd,EAAOe,OACZ,6BAAKf,EAAOM,aACZ,6BAAKN,EAAOI,iBCLLY,G,MAA+B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC7C,OACE,wBAAO1B,UAAU,6CAAjB,UACE,gCACE,qBAAIA,UAAU,YAAd,UACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAIJ,gCACG0B,EAAOlB,KAAI,SAAAC,GAAM,OAChB,cAAC,EAAD,CAAWA,OAAQA,GAAaA,EAAOkB,gBC0ClCC,EAxDH,WACV,MAA4BC,mBAAmB,IAA/C,mBAAOH,EAAP,KAAeI,EAAf,KAEMC,EAAe,SAACC,GACpB,OAAOA,EAAOC,SAAW,sBAAwB,aAGnD,OACE,sBAAKjC,UAAU,MAAf,UACE,sBAAKA,UAAU,MAAf,UACE,cAAC,IAAD,CACEkC,GAAG,IACHlC,UAAW+B,EAFb,uBAOA,cAAC,IAAD,CACEG,GAAG,UACHlC,UAAW+B,EAFb,4BAQF,+BACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEI,KAAK,IACLC,QACE,cAAC,EAAD,MAIJ,cAAC,IAAD,CACED,KAAK,SACLC,QACE,qCACE,cAAC,EAAD,CAAYnB,WAAYa,IACxB,cAAC,EAAD,CAAaJ,OAAQA,SAK3B,cAAC,IAAD,CACES,KAAK,IACLC,QACE,2DCtDdC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d3c69669.chunk.js","sourcesContent":["export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import { People } from './types/People';\n\nconst URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeople = async (): Promise<People[]> => {\n  const responce = await fetch(URL);\n\n  return responce.json();\n};\n","import React, { useEffect } from 'react';\nimport { getPeople } from '../../getPeople';\nimport { People } from '../../types/People';\n\nexport type Props = {\n  loadPeople: (people: People[]) => void,\n};\n\nexport function addParents(actualPeople: People[]) {\n  return actualPeople.map(person => ({\n    ...person,\n    father: actualPeople\n      .find(father => father.name === person.fatherName),\n    mother: actualPeople\n      .find(mother => mother.name === person.motherName),\n  }));\n}\n\nexport const PeoplePage: React.FC<Props> = ({ loadPeople }) => {\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await getPeople();\n\n      loadPeople(addParents(data));\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <h1 className=\"title\">People page</h1>\n  );\n};\n","import React from 'react';\nimport { People } from '../../types/People';\n\nexport type Props = {\n  person: People;\n};\n\nexport const PersonRow: React.FC<Props> = ({ person }) => {\n  return (\n    <tr className=\"Person\">\n      <th>{person.name}</th>\n      <th>{person.sex}</th>\n      <th>{person.born}</th>\n      <th>{person.died}</th>\n      <th>{person.motherName}</th>\n      <th>{person.fatherName}</th>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { People } from '../../types/People';\nimport { PersonRow } from '../PersonRow/PersonRow';\n\nimport 'bulma';\n\nexport type Props = {\n  people: People[],\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  return (\n    <table className=\"PeopleTable table is-bordered is-hoverable\">\n      <thead>\n        <tr className=\"table-row\">\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonRow person={person} key={person.slug} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useState } from 'react';\nimport { NavLink, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { PeopleTable } from './components/PeopleTable';\nimport { People } from './types/People';\n\ninterface Status {\n  isActive: boolean,\n}\n\nconst App = () => {\n  const [people, setPeople] = useState<People[]>([]);\n\n  const getLinkClass = (status: Status) => {\n    return status.isActive ? 'nav__link is-active' : 'nav__link';\n  };\n\n  return (\n    <div className=\"App\">\n      <nav className=\"nav\">\n        <NavLink\n          to=\"/\"\n          className={getLinkClass}\n        >\n          Home page\n        </NavLink>\n\n        <NavLink\n          to=\"/people\"\n          className={getLinkClass}\n        >\n          People page\n        </NavLink>\n      </nav>\n\n      <main>\n        <Routes>\n          <Route\n            path=\"/\"\n            element={(\n              <HomePage />\n            )}\n          />\n\n          <Route\n            path=\"people\"\n            element={(\n              <>\n                <PeoplePage loadPeople={setPeople} />\n                <PeopleTable people={people} />\n              </>\n            )}\n          />\n\n          <Route\n            path=\"*\"\n            element={(\n              <h2>Page not found</h2>\n            )}\n          />\n        </Routes>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}